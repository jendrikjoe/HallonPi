/*
 * RingBuffer.h
 *
 *  Created on: Apr 13, 2015
 *      Author: Jendrik
 */
#ifndef RINGBUFFER_H_
#define RINGBUFFER_H_

template<typename T>
class RingBuffer {

public:
	RingBuffer(int size);
	void writeElementToBuffer(T input);
	T getOldestElement();
	T getNewestElement();
	bool dataToRead();
	~RingBuffer();

private:
	int size;
	T *ringBuffer;
	int writerPoint;
	int readerPoint;

};

template<typename T>
inline RingBuffer<T>::RingBuffer(int size) {
}

template<typename T>
inline void RingBuffer<T>::writeElementToBuffer(T input) {
}

template<typename T>
inline T RingBuffer<T>::getOldestElement() {
}

template<typename T>
inline T RingBuffer<T>::getNewestElement() {
}

template<typename T>
inline bool RingBuffer<T>::dataToRead() {
}

template<typename T>
inline RingBuffer<T>::~RingBuffer() {
}

#endif
