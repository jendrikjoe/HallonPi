/*
 * Thread.cpp
 *
 *  Created on: Apr 15, 2015
 *      Author: Jendrik
 */



#include "Thread.h"

using namespace std;

Thread::Thread() {
}

Thread::~Thread() {}

void* Thread::startThread(void* pVoid) {
	Thread* aThread = static_cast<Thread*>(pVoid);
	assert(aThread);
	aThread->result = aThread->run();
	aThread->setCompleted();
	return aThread->result;
}

void Thread::start() {
	int status = pthread_attr_init(&threadAttribute);
	if (status) {
		printError("pthread attribute init failed at", status,
				__FILE__,__LINE__);
		exit(status);
	}
	status = pthread_attr_setscope(&threadAttribute,
			PTHREAD_SCOPE_SYSTEM);
	if (status) {
		printError("pthread attribute setscope failed at", status,
				__FILE__,__LINE__);
		exit(status);
	}
	status = pthread_create(&threadId, &threadAttribute,
			Thread::startThread, (void*)this);
	if (status) {
		printError("pthread creation failed at", status,
				__FILE__,__LINE__);
		exit(status);
	}
	status = pthread_attr_destroy(&threadAttribute);
	if (status) {
		printError("pthread attribute destruction failed at", status,
				__FILE__,__LINE__);
		exit(status);
	}
}

void* Thread::join() {
	int status = pthread_join(threadId, NULL);
	if (status) {
		printError("pthread join failed at", status,
				__FILE__,__LINE__);
		exit(status);
	}
	return result;
}

void Thread::setCompleted() {};


void Thread::printError(char * msg, int status, char* fileName, int lineNumber) {
		std::cout << msg << " " << fileName << ":"
				<< lineNumber << "-" << strerror(status) << std::endl;
}
