/*
 * TCPSender.cpp
 *
 *  Created on: Apr 16, 2015
 *      Author: Jendrik
 */

#include "TCPSender.h"

TCPSender::TCPSender(int inputSocket, struct sockaddr* remoteAddress,
		const std::map<tcp::PackageType, void*> bufferMap,
		sem_t *tcpReadSemaphore) : HallonThread(),
		bufferMap(bufferMap), tcpReadSemaphore(tcpReadSemaphore),
		inputSocket(inputSocket), remoteAddress(remoteAddress) {
	this->adcBuffer = (RingBuffer<tcp::ADCCommunicationPackage> *) (bufferMap.at(tcp::ADC_COM));
	this->houseBuffer = (RingBuffer <tcp::HousekeepingCommunicationPackage> *) (bufferMap.at(tcp::HOUSE_COM));
}

void* TCPSender::run() {
	char buffer[500];
	while(runBool) {
		sem_wait(tcpReadSemaphore);
		tcp::HousekeepingCommunicationPackage house;
		house = houseBuffer->getElement();
		if(house != (tcp::HousekeepingCommunicationPackage) NULL) {
			house.getFrame(buffer);
			send(inputSocket,&buffer, (size_t)house.getPackageLength(),0);
		}
	}
	return 0;
}

TCPSender::~TCPSender() {
	// TODO Auto-generated destructor stub
}

